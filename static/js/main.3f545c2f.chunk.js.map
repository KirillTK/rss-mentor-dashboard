{"version":3,"sources":["serviceWorker.js","firebase/Firebase.js","pages/login-page/LoginPage.js","components/table/DashBoardTable.js","pages/dashboard-page/DashboardPage.js","components/Routing.js","index.js"],"names":["Boolean","window","location","hostname","match","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase_Firebase","Firebase","Object","classCallCheck","this","app","initializeApp","auth","provider","GithubAuthProvider","addScope","signInWithPopup","LoginPage","_this","possibleConstructorReturn","getPrototypeOf","call","state","redirect","bind","assertThisInitialized","openDashboard","react_default","a","createElement","className","onClick","HashRouter","Link","to","_this2","firebase","doSignWithGithub","then","value","userName","additionalUserInfo","username","setState","localStorage","setItem","JSON","stringify","label","Redirect","Component","_","require","DashBoardTable","taskState","complete","checked","checking","inProgress","toDo","taskList","props","mentor","createTable","student","taskName","undefined","findIndex","tasks","task","replace","toLowerCase","trim","students","table","children","push","key","uuid","forEach","href","studentLink","target","rel","studentGithubName","tbody","getTableHeader","i","length","j","link","concat","nameTask","taskIndex","studentHasTask","score","console","log","status","getStyleCell","DashboardPage","handleChange","selectedOption","getDashboardData","catch","error","dashboard","selectedMentor","parse","getItem","getCurrentMentor","getTaskList","react_select_esm","onChange","options","components_table_DashBoardTable","fetch","response","json","data","getOptions","mentors","map","mentorName","find","hasOwnProperty","taskDescription","Routing","Route","exact","path","component","ReactDOM","render","components_Routing","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f545c2f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import app from 'firebase/app';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyAkXKnThgA_m-oR6E6Le98w-hWZS1G1Et4\",\n  authDomain: \"dashboard-f706b.firebaseapp.com\",\n  databaseURL: \"https://dashboard-f706b.firebaseio.com\",\n  projectId: \"dashboard-f706b\",\n  storageBucket: \"dashboard-f706b.appspot.com\",\n  messagingSenderId: \"172493927223\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n  }\n\n  doSignWithGithub(){\n    const provider = new app.auth.GithubAuthProvider();\n    provider.addScope('repo');\n    return this.auth.signInWithPopup(provider);\n  }\n}\n\nexport default new Firebase();\n","import React, {Component} from 'react';\nimport './LoginPage.css';\nimport firebase from '../../firebase/Firebase';\nimport {Link} from 'react-router-dom';\nimport {Redirect, HashRouter as Router} from 'react-router-dom'\n\n\nclass LoginPage extends Component {\n\n  state = {\n    redirect: false\n  };\n\n  constructor() {\n    super();\n    this.auth = this.auth.bind(this);\n    this.openDashboard = this.openDashboard.bind(this);\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"LoginPage\">\n        <div className=\"github-btn\" onClick={this.auth}>\n          <span>Sign in with GitHub</span>\n        </div>\n        <Router>\n          <Link to={'/dashboard'} className=\"skip-btn\">Skip sign in</Link>\n        </Router>\n        {this.openDashboard()}\n      </div>\n    );\n  }\n\n  auth() {\n    firebase.doSignWithGithub().then(value => {\n      const userName = value.additionalUserInfo.username;\n      if (userName) {\n        this.setState({redirect: true});\n        window.localStorage.setItem('selectedItem', JSON.stringify({value: userName, label: userName}));\n        this.openDashboard();\n      }\n    });\n  }\n\n\n  openDashboard() {\n    if (this.state.redirect) {\n      return <Redirect to='/dashboard'/>\n    }\n  }\n\n}\n\nexport default LoginPage;\n","import React, {Component} from 'react';\nimport uuid from 'uuid/v4';\nimport './DashBoardTable.css';\n\nconst _ = require('lodash');\n\n\nclass DashBoardTable extends Component {\n\n  taskState = {\n    complete: 'complete-state',\n    checked: 'checked-state',\n    checking: 'checking-state',\n    inProgress: 'in-progress-state',\n    toDo: 'to-do-state'\n  };\n\n  render() {\n\n    this.taskList = this.props.taskList;\n    this.mentor = this.props.mentor;\n\n    return (\n      <div className=\"DashBoardTable\">\n        <table>\n          {this.createTable()}\n        </table>\n      </div>\n    );\n  }\n\n\n  studentHasTask(student, taskName) {\n\n    if (student === undefined) return -1;\n\n    return _.findIndex(student.tasks, task => task.task.replace(/\\s/g, '').toLowerCase().trim() === taskName.replace(/\\s/g, '').toLowerCase().trim());\n  }\n\n  getTableHeader(students) {\n    let table = [];\n    let children = [];\n    children.push(<td key={uuid()}/>);\n\n    students.forEach(student => {\n      children.push(<td key={uuid()}><a href={student.studentLink} target=\"_blank\"\n                                        rel='noopener noreferrer'>{student.studentGithubName}</a></td>)\n    });\n\n    table.push(<thead key={uuid()}>\n    <tr>{children}</tr>\n    </thead>);\n    return table;\n  }\n\n  createTable() {\n    if (this.mentor !== undefined && this.taskList !== undefined) {\n\n      const {students} = this.mentor;\n      let table = [];\n      const tbody = [];\n      table = this.getTableHeader(students);\n\n\n      for (let i = 0; i < this.taskList.length; i++) {\n        let children = [];\n\n\n        for (let j = 0; j < students.length; j++) {\n\n          if (j === 0) {\n            children.push(<td key={uuid()}><a href={this.taskList[i].link}\n                                              target=\"_blank\"\n                                              rel='noopener noreferrer'>{`${this.taskList[i].nameTask}`}</a></td>);\n          }\n\n\n          const taskIndex = this.studentHasTask(students[j], this.taskList[i].nameTask);\n\n          if (taskIndex !== -1) {\n            children.push(<td key={uuid()}\n                              className={this.taskState.complete}>{`${students[j].tasks[taskIndex].score}`}</td>);\n          } else {\n            console.log(this.taskList[i].status);\n            children.push(<td key={uuid()}\n                              className={this.getStyleCell(this.taskList[i])}>{this.taskList[i].status}</td>);\n          }\n\n        }\n\n\n        tbody.push(<tr key={uuid()} className=\"border_bottom td\">{children}</tr>);\n      }\n\n      table.push(<tbody key={uuid()}>{tbody}</tbody>);\n      return table;\n    }\n    return null;\n  }\n\n\n  getStyleCell(task) {\n    if (task.status === 'In Progress') return this.taskState.inProgress;\n    if (task.status === 'Checking') return this.taskState.checking;\n    if (task.status === 'Checked') return this.taskState.checked;\n    if (task.status === 'ToDo') return this.taskState.toDo;\n    return '';\n  }\n\n}\n\nexport default DashBoardTable;\n","import React, {Component} from 'react';\nimport DashBoardTable from '../../components/table/DashBoardTable';\nimport Select from 'react-select';\nimport './DashboardPage.css';\n\nconst _ = require('lodash');\n\nclass DashboardPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.dashboard = [];\n\n    this.getDashboardData().catch(error => console.log(error));\n    const selectedMentor = JSON.parse(window.localStorage.getItem('selectedItem'));\n    this.state = {\n      selectedOption: selectedMentor !== null ? selectedMentor : null\n    };\n\n    this.getDashboardData = this.getDashboardData.bind(this);\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({selectedOption});\n    this.getDashboardData().catch(error => error);\n    window.localStorage.setItem('selectedItem', JSON.stringify(selectedOption));\n  };\n\n\n  render() {\n    const selectedOption = JSON.parse(window.localStorage.getItem('selectedItem'));\n    if (selectedOption) this.mentor = this.getCurrentMentor(selectedOption);\n    const taskList = this.getTaskList();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Select\n            className=\"Select\"\n            value={selectedOption}\n            onChange={this.handleChange}\n            options={this.state.options}\n          />\n\n          <DashBoardTable\n            mentor={this.mentor}\n            taskList={taskList}\n          />\n\n        </header>\n      </div>\n    );\n  }\n\n\n  async getDashboardData() {\n    this.dashboard = await fetch('./data/dashboard.json').then(response => response.json()).then(data => data);\n    this.getOptions();\n  }\n\n  getOptions() {\n    const mentors = _.map(this.dashboard.mentors, mentor => mentor.mentorName);\n    const options = _.map(mentors, mentor => {\n      return {value: mentor, label: mentor}\n    });\n    this.setState({options: options});\n  }\n\n  getCurrentMentor(selectedOption) {\n    return _.find(this.dashboard.mentors, mentor => mentor.mentorName === selectedOption.value);\n  }\n\n  getTaskList() {\n    if (this.dashboard.hasOwnProperty('taskDescription')) return this.dashboard.taskDescription;\n    return null;\n  }\n}\n\nexport default DashboardPage;\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport LoginPage from '../pages/login-page/LoginPage';\nimport DashboardPage from \"../pages/dashboard-page/DashboardPage\";\n\nclass Routing extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={LoginPage}/>\n          <Route path=\"/dashboard\" component={DashboardPage} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default Routing;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routing from \"./components/Routing\";\n\nReactDOM.render(<Routing />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}